{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/mk-mac-171/MyProject/ranking-movie/App.js\";\nimport React, { useState } from \"react\";\nimport { AppLoading } from \"expo\";\nimport * as Font from \"expo-font\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { Asset } from \"expo-asset\";\nimport { Ionicons, FontAwesome } from \"@expo/vector-icons\";\nimport Stack from \"./navigation/Stack\";\n\nrequire(\"@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/Ionicons.ttf\");\n\nvar cacheImages = function cacheImages(images) {\n  return images.map(function (image) {\n    if (typeof image === \"string\") {\n      return Image.prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n};\n\nvar cacheFonts = function cacheFonts(fonts) {\n  return fonts.map(function (font) {\n    return Font.loadAsync(font);\n  });\n};\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isReady = _useState2[0],\n      setIsReady = _useState2[1];\n\n  var loadAssets = function loadAssets() {\n    var images = cacheImages([\"https://images.unsplash.com/photo-1571847140471-1d7766e825ea?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=673&q=80\", require(\"./assets/splash.png\")]);\n    var fonts = cacheFonts([Ionicons.font, FontAwesome.font]);\n    return Promise.all([].concat(_toConsumableArray(images), _toConsumableArray(fonts)));\n  };\n\n  var onFinish = function onFinish() {\n    return setIsReady(true);\n  };\n\n  return isReady ? React.createElement(React.Fragment, null, React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })), React.createElement(StatusBar, {\n    barStyle: \"light-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  })) : React.createElement(AppLoading, {\n    startAsync: loadAssets,\n    onFinish: onFinish,\n    onError: console.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/mk-mac-171/MyProject/ranking-movie/App.js"],"names":["React","useState","AppLoading","Font","NavigationContainer","Asset","Ionicons","FontAwesome","Stack","require","cacheImages","images","map","image","Image","prefetch","fromModule","downloadAsync","cacheFonts","fonts","font","loadAsync","App","isReady","setIsReady","loadAssets","Promise","all","onFinish","console","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,oBAAtC;AACA,OAAOC,KAAP;;AAEAC,OAAO,CAAC,8EAAD,CAAP;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,MAAM;AAAA,SACxBA,MAAM,CAACC,GAAP,CAAW,UAAAC,KAAK,EAAI;AAClB,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,aAAOC,KAAK,CAACC,QAAN,CAAeF,KAAf,CAAP;AACD,KAFD,MAEO;AACL,aAAOR,KAAK,CAACW,UAAN,CAAiBH,KAAjB,EAAwBI,aAAxB,EAAP;AACD;AACF,GAND,CADwB;AAAA,CAA1B;;AASA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK;AAAA,SAAIA,KAAK,CAACP,GAAN,CAAU,UAAAQ,IAAI;AAAA,WAAIjB,IAAI,CAACkB,SAAL,CAAeD,IAAf,CAAJ;AAAA,GAAd,CAAJ;AAAA,CAAxB;;AAEA,eAAe,SAASE,GAAT,GAAe;AAAA,kBACErB,QAAQ,CAAC,KAAD,CADV;AAAA;AAAA,MACrBsB,OADqB;AAAA,MACZC,UADY;;AAE5B,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAMd,MAAM,GAAGD,WAAW,CAAC,CACzB,uIADyB,EAEzBD,OAAO,uBAFkB,CAAD,CAA1B;AAIA,QAAMU,KAAK,GAAGD,UAAU,CAAC,CAACZ,QAAQ,CAACc,IAAV,EAAgBb,WAAW,CAACa,IAA5B,CAAD,CAAxB;AACA,WAAOM,OAAO,CAACC,GAAR,8BAAgBhB,MAAhB,sBAA2BQ,KAA3B,GAAP;AACD,GAPD;;AAQA,MAAMS,QAAQ,GAAG,SAAXA,QAAW;AAAA,WAAMJ,UAAU,CAAC,IAAD,CAAhB;AAAA,GAAjB;;AACA,SAAOD,OAAO,GACZ,0CACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADY,GAQZ,oBAAC,UAAD;AACE,IAAA,UAAU,EAAEE,UADd;AAEE,IAAA,QAAQ,EAAEG,QAFZ;AAGE,IAAA,OAAO,EAAEC,OAAO,CAACC,KAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF;AAcD","sourcesContent":["import React, { useState } from \"react\";\nimport { AppLoading } from \"expo\";\nimport * as Font from \"expo-font\";\nimport { Image, StatusBar } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { Asset } from \"expo-asset\";\nimport { Ionicons, FontAwesome } from \"@expo/vector-icons\";\nimport Stack from \"./navigation/Stack\";\n\nrequire(\"@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/Ionicons.ttf\");\n\nconst cacheImages = images =>\n  images.map(image => {\n    if (typeof image === \"string\") {\n      return Image.prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n\nconst cacheFonts = fonts => fonts.map(font => Font.loadAsync(font));\n\nexport default function App() {\n  const [isReady, setIsReady] = useState(false);\n  const loadAssets = () => {\n    const images = cacheImages([\n      \"https://images.unsplash.com/photo-1571847140471-1d7766e825ea?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=673&q=80\",\n      require(\"./assets/splash.png\")\n    ]);\n    const fonts = cacheFonts([Ionicons.font, FontAwesome.font]);\n    return Promise.all([...images, ...fonts]);\n  };\n  const onFinish = () => setIsReady(true);\n  return isReady ? (\n    <>\n      <NavigationContainer>\n        <Stack />\n      </NavigationContainer>\n      <StatusBar barStyle=\"light-content\" />\n    </>\n  ) : (\n    <AppLoading\n      startAsync={loadAssets}\n      onFinish={onFinish}\n      onError={console.error}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}