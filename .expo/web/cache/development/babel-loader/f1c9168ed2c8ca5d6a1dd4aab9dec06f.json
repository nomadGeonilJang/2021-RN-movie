{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/mk-mac-171/MyProject/ranking-movie/screens/Movies/MoviesContainer.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { movieApi } from \"../../api\";\nimport MoviesPresenter from \"./MoviesPresenter\";\nexport default (function () {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      refreshing = _useState2[0],\n      setRefresing = _useState2[1];\n\n  var _useState3 = useState({\n    loading: true,\n    nowPlaying: [],\n    popular: [],\n    upcoming: [],\n    nowPlayingError: null,\n    popularError: null,\n    upcomingError: null\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      movies = _useState4[0],\n      setMovies = _useState4[1];\n\n  var getData = function getData() {\n    var _await$movieApi$nowPl, _await$movieApi$nowPl2, nowPlaying, nowPlayingError, _await$movieApi$popul, _await$movieApi$popul2, popular, popularError, _await$movieApi$upcom, _await$movieApi$upcom2, upcoming, upcomingError;\n\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(movieApi.nowPlaying());\n\n          case 2:\n            _await$movieApi$nowPl = _context.sent;\n            _await$movieApi$nowPl2 = _slicedToArray(_await$movieApi$nowPl, 2);\n            nowPlaying = _await$movieApi$nowPl2[0];\n            nowPlayingError = _await$movieApi$nowPl2[1];\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(movieApi.popular());\n\n          case 8:\n            _await$movieApi$popul = _context.sent;\n            _await$movieApi$popul2 = _slicedToArray(_await$movieApi$popul, 2);\n            popular = _await$movieApi$popul2[0];\n            popularError = _await$movieApi$popul2[1];\n            _context.next = 14;\n            return _regeneratorRuntime.awrap(movieApi.upcoming());\n\n          case 14:\n            _await$movieApi$upcom = _context.sent;\n            _await$movieApi$upcom2 = _slicedToArray(_await$movieApi$upcom, 2);\n            upcoming = _await$movieApi$upcom2[0];\n            upcomingError = _await$movieApi$upcom2[1];\n            setMovies({\n              loading: false,\n              nowPlaying: nowPlaying,\n              popular: popular,\n              upcoming: upcoming,\n              nowPlayingError: nowPlayingError,\n              popularError: popularError,\n              upcomingError: upcomingError\n            });\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getData();\n  }, []);\n  return React.createElement(MoviesPresenter, _extends({\n    refreshFn: getData\n  }, movies, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }\n  }));\n});","map":{"version":3,"sources":["/Users/mk-mac-171/MyProject/ranking-movie/screens/Movies/MoviesContainer.js"],"names":["React","useEffect","useState","movieApi","MoviesPresenter","refreshing","setRefresing","loading","nowPlaying","popular","upcoming","nowPlayingError","popularError","upcomingError","movies","setMovies","getData"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT;AACA,OAAOC,eAAP;AAEA,gBAAe,YAAM;AAAA,kBACgBF,QAAQ,CAAC,KAAD,CADxB;AAAA;AAAA,MACZG,UADY;AAAA,MACAC,YADA;;AAAA,mBAESJ,QAAQ,CAAC;AACnCK,IAAAA,OAAO,EAAE,IAD0B;AAEnCC,IAAAA,UAAU,EAAE,EAFuB;AAGnCC,IAAAA,OAAO,EAAE,EAH0B;AAInCC,IAAAA,QAAQ,EAAE,EAJyB;AAKnCC,IAAAA,eAAe,EAAE,IALkB;AAMnCC,IAAAA,YAAY,EAAE,IANqB;AAOnCC,IAAAA,aAAa,EAAE;AAPoB,GAAD,CAFjB;AAAA;AAAA,MAEZC,MAFY;AAAA,MAEJC,SAFI;;AAWnB,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAC8Bb,QAAQ,CAACK,UAAT,EAD9B;;AAAA;AAAA;AAAA;AACPA,YAAAA,UADO;AACKG,YAAAA,eADL;AAAA;AAAA,6CAEwBR,QAAQ,CAACM,OAAT,EAFxB;;AAAA;AAAA;AAAA;AAEPA,YAAAA,OAFO;AAEEG,YAAAA,YAFF;AAAA;AAAA,6CAG0BT,QAAQ,CAACO,QAAT,EAH1B;;AAAA;AAAA;AAAA;AAGPA,YAAAA,QAHO;AAGGG,YAAAA,aAHH;AAIdE,YAAAA,SAAS,CAAC;AACRR,cAAAA,OAAO,EAAE,KADD;AAERC,cAAAA,UAAU,EAAVA,UAFQ;AAGRC,cAAAA,OAAO,EAAPA,OAHQ;AAIRC,cAAAA,QAAQ,EAARA,QAJQ;AAKRC,cAAAA,eAAe,EAAfA,eALQ;AAMRC,cAAAA,YAAY,EAAZA,YANQ;AAORC,cAAAA,aAAa,EAAbA;AAPQ,aAAD,CAAT;;AAJc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAcAZ,EAAAA,SAAS,CAAC,YAAM;AACde,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAEA;AAA5B,KAAyCF,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CA9BD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { movieApi } from \"../../api\";\nimport MoviesPresenter from \"./MoviesPresenter\";\n\nexport default () => {\n  const [refreshing, setRefresing] = useState(false);\n  const [movies, setMovies] = useState({\n    loading: true,\n    nowPlaying: [],\n    popular: [],\n    upcoming: [],\n    nowPlayingError: null,\n    popularError: null,\n    upcomingError: null\n  });\n  const getData = async () => {\n    const [nowPlaying, nowPlayingError] = await movieApi.nowPlaying();\n    const [popular, popularError] = await movieApi.popular();\n    const [upcoming, upcomingError] = await movieApi.upcoming();\n    setMovies({\n      loading: false,\n      nowPlaying,\n      popular,\n      upcoming,\n      nowPlayingError,\n      popularError,\n      upcomingError\n    });\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return <MoviesPresenter refreshFn={getData} {...movies} />;\n};\n"]},"metadata":{},"sourceType":"module"}