{"ast":null,"code":"var _jsxFileName = \"/Users/mk-mac-171/MyProject/ranking-movie/navigation/Tabs.js\";\nimport React, { useLayoutEffect } from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport Movies from \"../screens/Movies\";\nimport Tv from \"../screens/Tv\";\nimport Search from \"../screens/Search\";\nimport Favs from \"../screens/Favs\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar Tabs = createBottomTabNavigator();\n\nvar getHeaderName = function getHeaderName(route) {\n  var _route$state;\n\n  return (route == null ? void 0 : (_route$state = route.state) == null ? void 0 : _route$state.routeNames[route.state.index]) || \"Movies\";\n};\n\nexport default (function (_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  useLayoutEffect(function () {\n    var name = getHeaderName(route);\n    navigation.setOptions({\n      title: name\n    });\n  }, [route]);\n  return React.createElement(Tabs.Navigator, {\n    screenOptions: function screenOptions(_ref2) {\n      var route = _ref2.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused;\n          var iconName = Platform.OS === \"ios\" ? \"ios-\" : \"md-\";\n\n          if (route.name === \"Movies\") {\n            iconName += \"film\";\n          } else if (route.name === \"TV\") {\n            iconName += \"tv\";\n          } else if (route.name === \"Search\") {\n            iconName += \"search\";\n          } else if (route.name === \"Discovery\") {\n            iconName += \"heart\";\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            color: focused ? \"white\" : \"grey\",\n            size: 26,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 13\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      showLabel: false,\n      style: {\n        backgroundColor: \"black\",\n        borderTopColor: \"black\"\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(Tabs.Screen, {\n    name: \"Movies\",\n    component: Movies,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), React.createElement(Tabs.Screen, {\n    name: \"TV\",\n    component: Tv,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), React.createElement(Tabs.Screen, {\n    name: \"Search\",\n    component: Search,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), React.createElement(Tabs.Screen, {\n    name: \"Discovery\",\n    component: Favs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n});","map":{"version":3,"sources":["/Users/mk-mac-171/MyProject/ranking-movie/navigation/Tabs.js"],"names":["React","useLayoutEffect","createBottomTabNavigator","Ionicons","Movies","Tv","Search","Favs","Tabs","getHeaderName","route","state","routeNames","index","navigation","name","setOptions","title","tabBarIcon","focused","iconName","Platform","OS","showLabel","style","backgroundColor","borderTopColor"],"mappings":"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","sourcesContent":["import React, { useLayoutEffect } from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport Movies from \"../screens/Movies\";\nimport Tv from \"../screens/Tv\";\nimport Search from \"../screens/Search\";\nimport Favs from \"../screens/Favs\";\nimport { Platform } from \"react-native\";\n\nconst Tabs = createBottomTabNavigator();\n\nconst getHeaderName = route =>\n  route?.state?.routeNames[route.state.index] || \"Movies\";\n\nexport default ({ navigation, route }) => {\n  useLayoutEffect(() => {\n    const name = getHeaderName(route);\n    navigation.setOptions({\n      title: name\n    });\n  }, [route]);\n  return (\n    <Tabs.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused }) => {\n          let iconName = Platform.OS === \"ios\" ? \"ios-\" : \"md-\";\n          if (route.name === \"Movies\") {\n            iconName += \"film\";\n          } else if (route.name === \"TV\") {\n            iconName += \"tv\";\n          } else if (route.name === \"Search\") {\n            iconName += \"search\";\n          } else if (route.name === \"Discovery\") {\n            iconName += \"heart\";\n          }\n          return (\n            <Ionicons\n              name={iconName}\n              color={focused ? \"white\" : \"grey\"}\n              size={26}\n            />\n          );\n        }\n      })}\n      tabBarOptions={{\n        showLabel: false,\n\n        style: {\n          backgroundColor: \"black\",\n          borderTopColor: \"black\"\n        }\n      }}\n    >\n      <Tabs.Screen name=\"Movies\" component={Movies} />\n      <Tabs.Screen name=\"TV\" component={Tv} />\n      <Tabs.Screen name=\"Search\" component={Search} />\n      <Tabs.Screen name=\"Discovery\" component={Favs} />\n    </Tabs.Navigator>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}