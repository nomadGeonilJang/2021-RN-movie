{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/mk-mac-171/MyProject/ranking-movie/screens/Detail/DetailContainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport * as WebBrowser from \"expo-web-browser\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { movieApi, tvApi } from \"../../api\";\nexport default (function (_ref) {\n  var navigation = _ref.navigation,\n      _ref$route$params = _ref.route.params,\n      isTv = _ref$route$params.isTv,\n      id = _ref$route$params.id,\n      title = _ref$route$params.title,\n      backgroundImage = _ref$route$params.backgroundImage,\n      poster = _ref$route$params.poster,\n      votes = _ref$route$params.votes,\n      overview = _ref$route$params.overview;\n\n  var _useState = useState({\n    loading: true,\n    result: {\n      title: title,\n      backgroundImage: backgroundImage,\n      poster: poster,\n      overview: overview,\n      votes: votes,\n      videos: {\n        results: []\n      }\n    }\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      detail = _useState2[0],\n      setDetail = _useState2[1];\n\n  var getData = function getData() {\n    var _ref2, _ref3, getDetail, getDetailError;\n\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!isTv) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(tvApi.show(id));\n\n          case 3:\n            _context.t0 = _context.sent;\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(movieApi.movie(id));\n\n          case 8:\n            _context.t0 = _context.sent;\n\n          case 9:\n            _ref2 = _context.t0;\n            _ref3 = _slicedToArray(_ref2, 2);\n            getDetail = _ref3[0];\n            getDetailError = _ref3[1];\n            setDetail({\n              loading: false,\n              result: _objectSpread(_objectSpread({}, getDetail), {}, {\n                title: getDetail.title || getDetail.name,\n                backgroundImage: getDetail.backdrop_path,\n                poster: getDetail.poster_path,\n                overview: getDetail.overview,\n                votes: getDetail.vote_average\n              })\n            });\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getData();\n  }, [id]);\n  React.useLayoutEffect(function () {\n    navigation.setOptions({\n      title: title\n    });\n  });\n\n  var openBrowser = function openBrowser(url) {\n    return _regeneratorRuntime.async(function openBrowser$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(WebBrowser.openBrowserAsync(url));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(DetailPresenter, _extends({\n    openBrowser: openBrowser\n  }, detail, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 10\n    }\n  }));\n});","map":{"version":3,"sources":["/Users/mk-mac-171/MyProject/ranking-movie/screens/Detail/DetailContainer.js"],"names":["React","useState","useEffect","WebBrowser","DetailPresenter","movieApi","tvApi","navigation","route","params","isTv","id","title","backgroundImage","poster","votes","overview","loading","result","videos","results","detail","setDetail","getData","show","movie","getDetail","getDetailError","name","backdrop_path","poster_path","vote_average","useLayoutEffect","setOptions","openBrowser","url","openBrowserAsync"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,KAAKC,UAAZ,MAA4B,kBAA5B;AACA,OAAOC,eAAP;AACA,SAASC,QAAT,EAAmBC,KAAnB;AAEA,gBAAe,gBAKT;AAAA,MAJJC,UAII,QAJJA,UAII;AAAA,+BAHJC,KAGI,CAFFC,MAEE;AAAA,MAFQC,IAER,qBAFQA,IAER;AAAA,MAFcC,EAEd,qBAFcA,EAEd;AAAA,MAFkBC,KAElB,qBAFkBA,KAElB;AAAA,MAFyBC,eAEzB,qBAFyBA,eAEzB;AAAA,MAF0CC,MAE1C,qBAF0CA,MAE1C;AAAA,MAFkDC,KAElD,qBAFkDA,KAElD;AAAA,MAFyDC,QAEzD,qBAFyDA,QAEzD;;AAAA,kBACwBf,QAAQ,CAAC;AACnCgB,IAAAA,OAAO,EAAE,IAD0B;AAEnCC,IAAAA,MAAM,EAAE;AACNN,MAAAA,KAAK,EAALA,KADM;AAENC,MAAAA,eAAe,EAAfA,eAFM;AAGNC,MAAAA,MAAM,EAANA,MAHM;AAINE,MAAAA,QAAQ,EAARA,QAJM;AAKND,MAAAA,KAAK,EAALA,KALM;AAMNI,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE;AADH;AANF;AAF2B,GAAD,CADhC;AAAA;AAAA,MACGC,MADH;AAAA,MACWC,SADX;;AAcJ,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iBACsBb,IADtB;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAEJJ,KAAK,CAACkB,IAAN,CAAWb,EAAX,CAFI;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,6CAGJN,QAAQ,CAACoB,KAAT,CAAed,EAAf,CAHI;;AAAA;AAAA;;AAAA;AAAA;AAAA;AACPe,YAAAA,SADO;AACIC,YAAAA,cADJ;AAIdL,YAAAA,SAAS,CAAC;AACRL,cAAAA,OAAO,EAAE,KADD;AAERC,cAAAA,MAAM,kCACDQ,SADC;AAEJd,gBAAAA,KAAK,EAAEc,SAAS,CAACd,KAAV,IAAmBc,SAAS,CAACE,IAFhC;AAGJf,gBAAAA,eAAe,EAAEa,SAAS,CAACG,aAHvB;AAIJf,gBAAAA,MAAM,EAAEY,SAAS,CAACI,WAJd;AAKJd,gBAAAA,QAAQ,EAAEU,SAAS,CAACV,QALhB;AAMJD,gBAAAA,KAAK,EAAEW,SAAS,CAACK;AANb;AAFE,aAAD,CAAT;;AAJc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAiBA7B,EAAAA,SAAS,CAAC,YAAM;AACdqB,IAAAA,OAAO;AACR,GAFQ,EAEN,CAACZ,EAAD,CAFM,CAAT;AAGAX,EAAAA,KAAK,CAACgC,eAAN,CAAsB,YAAM;AAC1BzB,IAAAA,UAAU,CAAC0B,UAAX,CAAsB;AAAErB,MAAAA,KAAK,EAALA;AAAF,KAAtB;AACD,GAFD;;AAIA,MAAMsB,WAAW,GAAG,SAAdA,WAAc,CAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACZhC,UAAU,CAACiC,gBAAX,CAA4BD,GAA5B,CADY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAIA,SAAO,oBAAC,eAAD;AAAiB,IAAA,WAAW,EAAED;AAA9B,KAA+Cb,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAhDD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport * as WebBrowser from \"expo-web-browser\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { movieApi, tvApi } from \"../../api\";\n\nexport default ({\n  navigation,\n  route: {\n    params: { isTv, id, title, backgroundImage, poster, votes, overview }\n  }\n}) => {\n  const [detail, setDetail] = useState({\n    loading: true,\n    result: {\n      title,\n      backgroundImage,\n      poster,\n      overview,\n      votes,\n      videos: {\n        results: []\n      }\n    }\n  });\n  const getData = async () => {\n    const [getDetail, getDetailError] = isTv\n      ? await tvApi.show(id)\n      : await movieApi.movie(id);\n    setDetail({\n      loading: false,\n      result: {\n        ...getDetail,\n        title: getDetail.title || getDetail.name,\n        backgroundImage: getDetail.backdrop_path,\n        poster: getDetail.poster_path,\n        overview: getDetail.overview,\n        votes: getDetail.vote_average\n      }\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, [id]);\n  React.useLayoutEffect(() => {\n    navigation.setOptions({ title });\n  });\n\n  const openBrowser = async url => {\n    await WebBrowser.openBrowserAsync(url);\n  };\n\n  return <DetailPresenter openBrowser={openBrowser} {...detail} />;\n};\n"]},"metadata":{},"sourceType":"module"}