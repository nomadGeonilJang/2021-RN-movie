{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _jsxFileName = \"/Users/mk-mac-171/MyProject/ranking-movie/screens/Detail/DetailPresenter.js\";\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  color: white;\\n  opacity: 0.8;\\n  font-weight: 500;\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  margin-top: 30px;\\n  color: white;\\n  opacity: 0.8;\\n  font-weight: 800;\\n  margin-bottom: 15px;\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  margin-top: 30px;\\n  padding: 0px 30px;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  color: white;\\n  font-weight: 600;\\n  font-size: 24px;\\n  margin-bottom: 10px;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  width: 50%;\\n  margin-left: 40px;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  flex-direction: row;\\n  align-items: center;\\n  top: 30px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  height: \", \"px;\\n  align-items: center;\\n  justify-content: flex-end;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  width: 100%;\\n  height: 100%;\\n  opacity: 0.4;\\n  position: absolute;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport styled from \"styled-components/native\";\nimport ScrollContainer from \"../../components/ScrollContainer\";\nimport { apiImage } from \"../../api\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Poster from \"../../components/Poster\";\nimport Votes from \"../../components/Votes\";\nimport { formatDate } from \"../../utils\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport Link from \"../../components/Detail/Link\";\nvar BG = styled.Image(_templateObject());\nvar Header = styled.View(_templateObject2(), Dimensions.get(\"window\").height / 3);\nvar Container = styled.View(_templateObject3());\nvar Info = styled.View(_templateObject4());\nvar Title = styled.Text(_templateObject5());\nvar Data = styled.View(_templateObject6());\nvar DataName = styled.Text(_templateObject7());\nvar DataValue = styled.Text(_templateObject8());\nexport default (function (_ref) {\n  var _result$videos$result;\n\n  var openBrowser = _ref.openBrowser,\n      result = _ref.result,\n      loading = _ref.loading;\n  return React.createElement(ScrollContainer, {\n    loading: false,\n    contentContainerStyle: {\n      paddingBottom: 80\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 3\n    }\n  }, React.createElement(React.Fragment, null, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, React.createElement(BG, {\n    source: {\n      uri: apiImage(result.backgroundImage, \"-\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, React.createElement(Poster, {\n    url: result.poster,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), React.createElement(Info, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, result.title), result.votes ? React.createElement(Votes, {\n    votes: result.votes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }) : null))), React.createElement(Data, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, result.overview ? React.createElement(React.Fragment, null, React.createElement(DataName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Overview\"), React.createElement(DataValue, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, result.overview)) : null, loading ? React.createElement(ActivityIndicator, {\n    style: {\n      marginTop: 30\n    },\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }) : null, result.spoken_languages ? React.createElement(React.Fragment, null, React.createElement(DataName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, \"Languages\"), React.createElement(DataValue, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, result.spoken_languages.map(function (l) {\n    return l.name + \" \";\n  }))) : null, result.release_date ? React.createElement(React.Fragment, null, React.createElement(DataName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Release Date\"), React.createElement(DataValue, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, formatDate(result.release_date))) : null, result.status ? React.createElement(React.Fragment, null, React.createElement(DataName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Status\"), React.createElement(DataValue, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, result.status)) : null, result.runtime ? React.createElement(React.Fragment, null, React.createElement(DataName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Runtime\"), React.createElement(DataValue, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, result.runtime, \" minutes\")) : null, result.first_air_date ? React.createElement(React.Fragment, null, React.createElement(DataName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"First Air Date\"), React.createElement(DataValue, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, formatDate(result.first_air_date))) : null, result.genres ? React.createElement(React.Fragment, null, React.createElement(DataName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"Genres\"), React.createElement(DataValue, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, result.genres.map(function (g, index) {\n    return index + 1 === result.genres.length ? g.name : g.name + \", \";\n  }))) : null, result.number_of_episodes ? React.createElement(React.Fragment, null, React.createElement(DataName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"Seasons / Episodes\"), React.createElement(DataValue, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, result.number_of_seasons, \" / \", result.number_of_episodes)) : null, result.imdb_id ? React.createElement(React.Fragment, null, React.createElement(DataName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, \"Links\"), React.createElement(Link, {\n    text: \"IMDB Page\",\n    icon: \"imdb\",\n    onPress: function onPress() {\n      return openBrowser(\"https://www.imdb.com/title/\" + result.imdb_id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  })) : null, ((_result$videos$result = result.videos.results) == null ? void 0 : _result$videos$result.length) > 0 ? React.createElement(React.Fragment, null, React.createElement(DataName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, \"Videos\"), result.videos.results.map(function (video) {\n    return React.createElement(Link, {\n      text: video.name,\n      key: video.id,\n      icon: \"youtube-play\",\n      onPress: function onPress() {\n        return openBrowser(\"https://www.youtube.com/watch?v=\" + video.key);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    });\n  })) : null)));\n});","map":{"version":3,"sources":["/Users/mk-mac-171/MyProject/ranking-movie/screens/Detail/DetailPresenter.js"],"names":["React","styled","ScrollContainer","apiImage","Poster","Votes","formatDate","TouchableOpacity","Link","BG","Image","Header","View","Dimensions","get","height","Container","Info","Title","Text","Data","DataName","DataValue","openBrowser","result","loading","paddingBottom","uri","backgroundImage","poster","title","votes","overview","marginTop","spoken_languages","map","l","name","release_date","status","runtime","first_air_date","genres","g","index","length","number_of_episodes","number_of_seasons","imdb_id","videos","results","video","id","key"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components/native\";\nimport ScrollContainer from \"../../components/ScrollContainer\";\nimport { apiImage } from \"../../api\";\nimport { Dimensions, ActivityIndicator } from \"react-native\";\nimport Poster from \"../../components/Poster\";\nimport Votes from \"../../components/Votes\";\nimport { formatDate } from \"../../utils\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport Link from \"../../components/Detail/Link\";\n\nconst BG = styled.Image`\n  width: 100%;\n  height: 100%;\n  opacity: 0.4;\n  position: absolute;\n`;\n\nconst Header = styled.View`\n  height: ${Dimensions.get(\"window\").height / 3}px;\n  align-items: center;\n  justify-content: flex-end;\n`;\n\nconst Container = styled.View`\n  flex-direction: row;\n  align-items: center;\n  top: 30px;\n`;\n\nconst Info = styled.View`\n  width: 50%;\n  margin-left: 40px;\n`;\n\nconst Title = styled.Text`\n  color: white;\n  font-weight: 600;\n  font-size: 24px;\n  margin-bottom: 10px;\n`;\n\nconst Data = styled.View`\n  margin-top: 30px;\n  padding: 0px 30px;\n`;\n\nconst DataName = styled.Text`\n  margin-top: 30px;\n  color: white;\n  opacity: 0.8;\n  font-weight: 800;\n  margin-bottom: 15px;\n`;\n\nconst DataValue = styled.Text`\n  color: white;\n  opacity: 0.8;\n  font-weight: 500;\n`;\n\nexport default ({ openBrowser, result, loading }) => (\n  <ScrollContainer\n    loading={false}\n    contentContainerStyle={{ paddingBottom: 80 }}\n  >\n    <>\n      <Header>\n        <BG source={{ uri: apiImage(result.backgroundImage, \"-\") }} />\n        <Container>\n          <Poster url={result.poster} />\n          <Info>\n            <Title>{result.title}</Title>\n            {result.votes ? <Votes votes={result.votes} /> : null}\n          </Info>\n        </Container>\n      </Header>\n      <Data>\n        {result.overview ? (\n          <>\n            <DataName>Overview</DataName>\n            <DataValue>{result.overview}</DataValue>\n          </>\n        ) : null}\n        {loading ? (\n          <ActivityIndicator style={{ marginTop: 30 }} color={\"white\"} />\n        ) : null}\n        {result.spoken_languages ? (\n          <>\n            <DataName>Languages</DataName>\n            <DataValue>\n              {result.spoken_languages.map(l => `${l.name} `)}\n            </DataValue>\n          </>\n        ) : null}\n        {result.release_date ? (\n          <>\n            <DataName>Release Date</DataName>\n            <DataValue>{formatDate(result.release_date)}</DataValue>\n          </>\n        ) : null}\n        {result.status ? (\n          <>\n            <DataName>Status</DataName>\n            <DataValue>{result.status}</DataValue>\n          </>\n        ) : null}\n        {result.runtime ? (\n          <>\n            <DataName>Runtime</DataName>\n            <DataValue>{result.runtime} minutes</DataValue>\n          </>\n        ) : null}\n        {result.first_air_date ? (\n          <>\n            <DataName>First Air Date</DataName>\n            <DataValue>{formatDate(result.first_air_date)}</DataValue>\n          </>\n        ) : null}\n        {result.genres ? (\n          <>\n            <DataName>Genres</DataName>\n            <DataValue>\n              {result.genres.map((g, index) =>\n                index + 1 === result.genres.length ? g.name : `${g.name}, `\n              )}\n            </DataValue>\n          </>\n        ) : null}\n        {result.number_of_episodes ? (\n          <>\n            <DataName>Seasons / Episodes</DataName>\n            <DataValue>\n              {result.number_of_seasons} / {result.number_of_episodes}\n            </DataValue>\n          </>\n        ) : null}\n        {result.imdb_id ? (\n          <>\n            <DataName>Links</DataName>\n            <Link\n              text={\"IMDB Page\"}\n              icon={\"imdb\"}\n              onPress={() =>\n                openBrowser(`https://www.imdb.com/title/${result.imdb_id}`)\n              }\n            />\n          </>\n        ) : null}\n        {result.videos.results?.length > 0 ? (\n          <>\n            <DataName>Videos</DataName>\n            {result.videos.results.map(video => (\n              <Link\n                text={video.name}\n                key={video.id}\n                icon=\"youtube-play\"\n                onPress={() =>\n                  openBrowser(`https://www.youtube.com/watch?v=${video.key}`)\n                }\n              />\n            ))}\n          </>\n        ) : null}\n      </Data>\n    </>\n  </ScrollContainer>\n);\n"]},"metadata":{},"sourceType":"module"}