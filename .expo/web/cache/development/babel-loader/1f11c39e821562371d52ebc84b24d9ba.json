{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _jsxFileName = \"/Users/mk-mac-171/MyProject/ranking-movie/screens/Movies/MoviesPresenter.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  width: 100%;\\n  height: \", \"px;\\n  margin-bottom: 40px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport styled from \"styled-components/native\";\nimport Swiper from \"react-native-web-swiper\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Slide from \"../../components/Movies/Slide\";\nimport Vertical from \"../../components/Vertical\";\nimport Horizontal from \"../../components/Horizontal\";\nimport ScrollContainer from \"../../components/ScrollContainer\";\nimport HorizontalSlider from \"../../components/HorizontalSlider\";\nimport List from \"../../components/List\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    WIDTH = _Dimensions$get.width,\n    HEIGHT = _Dimensions$get.height;\n\nvar SliderContainer = styled.View(_templateObject(), HEIGHT / 3);\nvar Container = styled.View(_templateObject2());\nexport default (function (_ref) {\n  var refreshFn = _ref.refreshFn,\n      loading = _ref.loading,\n      nowPlaying = _ref.nowPlaying,\n      popular = _ref.popular,\n      upcoming = _ref.upcoming;\n  return React.createElement(ScrollContainer, {\n    refreshFn: refreshFn,\n    loading: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }\n  }, React.createElement(React.Fragment, null, React.createElement(SliderContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, React.createElement(Swiper, {\n    controlsEnabled: false,\n    loop: true,\n    timeout: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, nowPlaying.map(function (movie) {\n    return React.createElement(Slide, {\n      key: movie.id,\n      id: movie.id,\n      title: movie.original_title,\n      overview: movie.overview,\n      votes: movie.vote_average,\n      backgroundImage: movie.backdrop_path,\n      poster: movie.poster_path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    });\n  }))), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, React.createElement(HorizontalSlider, {\n    title: \"Popular Movies\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, popular.map(function (movie) {\n    return React.createElement(Vertical, {\n      id: movie.id,\n      key: movie.id,\n      poster: movie.poster_path,\n      title: movie.title,\n      votes: movie.vote_average,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    });\n  })), React.createElement(List, {\n    title: \"Coming Soon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, upcoming.map(function (movie) {\n    return React.createElement(Horizontal, {\n      key: movie.id,\n      id: movie.id,\n      title: movie.title,\n      releaseDate: movie.release_date,\n      poster: movie.poster_path,\n      overview: movie.overview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    });\n  })))));\n});","map":{"version":3,"sources":["/Users/mk-mac-171/MyProject/ranking-movie/screens/Movies/MoviesPresenter.js"],"names":["React","styled","Swiper","Slide","Vertical","Horizontal","ScrollContainer","HorizontalSlider","List","Dimensions","get","WIDTH","width","HEIGHT","height","SliderContainer","View","Container","refreshFn","loading","nowPlaying","popular","upcoming","map","movie","id","original_title","overview","vote_average","backdrop_path","poster_path","title","release_date"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components/native\";\nimport Swiper from \"react-native-web-swiper\";\nimport { Dimensions } from \"react-native\";\nimport Slide from \"../../components/Movies/Slide\";\nimport Vertical from \"../../components/Vertical\";\nimport Horizontal from \"../../components/Horizontal\";\nimport ScrollContainer from \"../../components/ScrollContainer\";\nimport HorizontalSlider from \"../../components/HorizontalSlider\";\nimport List from \"../../components/List\";\n\nconst { width: WIDTH, height: HEIGHT } = Dimensions.get(\"window\");\n\nconst SliderContainer = styled.View`\n  width: 100%;\n  height: ${HEIGHT / 3}px;\n  margin-bottom: 40px;\n`;\n\nconst Container = styled.View``;\n\nexport default ({ refreshFn, loading, nowPlaying, popular, upcoming }) => (\n  <ScrollContainer refreshFn={refreshFn} loading={loading}>\n    <>\n      <SliderContainer>\n        <Swiper controlsEnabled={false} loop timeout={3}>\n          {nowPlaying.map(movie => (\n            <Slide\n              key={movie.id}\n              id={movie.id}\n              title={movie.original_title}\n              overview={movie.overview}\n              votes={movie.vote_average}\n              backgroundImage={movie.backdrop_path}\n              poster={movie.poster_path}\n            />\n          ))}\n        </Swiper>\n      </SliderContainer>\n      <Container>\n        <HorizontalSlider title={\"Popular Movies\"}>\n          {popular.map(movie => (\n            <Vertical\n              id={movie.id}\n              key={movie.id}\n              poster={movie.poster_path}\n              title={movie.title}\n              votes={movie.vote_average}\n            />\n          ))}\n        </HorizontalSlider>\n        <List title=\"Coming Soon\">\n          {upcoming.map(movie => (\n            <Horizontal\n              key={movie.id}\n              id={movie.id}\n              title={movie.title}\n              releaseDate={movie.release_date}\n              poster={movie.poster_path}\n              overview={movie.overview}\n            />\n          ))}\n        </List>\n      </Container>\n    </>\n  </ScrollContainer>\n);\n"]},"metadata":{},"sourceType":"module"}