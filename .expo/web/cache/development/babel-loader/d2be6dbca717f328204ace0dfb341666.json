{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/mk-mac-171/MyProject/ranking-movie/screens/Search/SearchContainer.js\";\nimport React, { useState } from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { movieApi, tvApi } from \"../../api\";\nexport default (function () {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      keyword = _useState2[0],\n      setKeyword = _useState2[1];\n\n  var _useState3 = useState({\n    movies: [],\n    shows: [],\n    movieError: null,\n    showsError: null\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      results = _useState4[0],\n      setResults = _useState4[1];\n\n  var onChange = function onChange(text) {\n    return setKeyword(text);\n  };\n\n  var search = function search() {\n    var _await$movieApi$searc, _await$movieApi$searc2, movies, movieError, _await$tvApi$search, _await$tvApi$search2, shows, showsError;\n\n    return _regeneratorRuntime.async(function search$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(keyword === \"\")) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(movieApi.search(keyword));\n\n          case 4:\n            _await$movieApi$searc = _context.sent;\n            _await$movieApi$searc2 = _slicedToArray(_await$movieApi$searc, 2);\n            movies = _await$movieApi$searc2[0];\n            movieError = _await$movieApi$searc2[1];\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(tvApi.search(keyword));\n\n          case 10:\n            _await$tvApi$search = _context.sent;\n            _await$tvApi$search2 = _slicedToArray(_await$tvApi$search, 2);\n            shows = _await$tvApi$search2[0];\n            showsError = _await$tvApi$search2[1];\n            setResults({\n              movies: movies,\n              shows: shows,\n              movieError: movieError,\n              showsError: showsError\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(SearchPresenter, _extends({}, results, {\n    onChange: onChange,\n    onSubmit: search,\n    keyword: keyword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }));\n});","map":{"version":3,"sources":["/Users/mk-mac-171/MyProject/ranking-movie/screens/Search/SearchContainer.js"],"names":["React","useState","SearchPresenter","movieApi","tvApi","keyword","setKeyword","movies","shows","movieError","showsError","results","setResults","onChange","text","search"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,eAAP;AACA,SAASC,QAAT,EAAmBC,KAAnB;AAEA,gBAAe,YAAM;AAAA,kBACWH,QAAQ,CAAC,EAAD,CADnB;AAAA;AAAA,MACZI,OADY;AAAA,MACHC,UADG;;AAAA,mBAEWL,QAAQ,CAAC;AACrCM,IAAAA,MAAM,EAAE,EAD6B;AAErCC,IAAAA,KAAK,EAAE,EAF8B;AAGrCC,IAAAA,UAAU,EAAE,IAHyB;AAIrCC,IAAAA,UAAU,EAAE;AAJyB,GAAD,CAFnB;AAAA;AAAA,MAEZC,OAFY;AAAA,MAEHC,UAFG;;AAQnB,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,IAAI;AAAA,WAAIR,UAAU,CAACQ,IAAD,CAAd;AAAA,GAArB;;AACA,MAAMC,MAAM,GAAG,SAATA,MAAS;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,kBACTV,OAAO,KAAK,EADH;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,6CAIsBF,QAAQ,CAACY,MAAT,CAAgBV,OAAhB,CAJtB;;AAAA;AAAA;AAAA;AAINE,YAAAA,MAJM;AAIEE,YAAAA,UAJF;AAAA;AAAA,6CAKqBL,KAAK,CAACW,MAAN,CAAaV,OAAb,CALrB;;AAAA;AAAA;AAAA;AAKNG,YAAAA,KALM;AAKCE,YAAAA,UALD;AAMbE,YAAAA,UAAU,CAAC;AACTL,cAAAA,MAAM,EAANA,MADS;AAETC,cAAAA,KAAK,EAALA,KAFS;AAGTC,cAAAA,UAAU,EAAVA,UAHS;AAITC,cAAAA,UAAU,EAAVA;AAJS,aAAD,CAAV;;AANa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAcA,SACE,oBAAC,eAAD,eACMC,OADN;AAEE,IAAA,QAAQ,EAAEE,QAFZ;AAGE,IAAA,QAAQ,EAAEE,MAHZ;AAIE,IAAA,OAAO,EAAEV,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAQD,CA/BD","sourcesContent":["import React, { useState } from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { movieApi, tvApi } from \"../../api\";\n\nexport default () => {\n  const [keyword, setKeyword] = useState(\"\");\n  const [results, setResults] = useState({\n    movies: [],\n    shows: [],\n    movieError: null,\n    showsError: null\n  });\n  const onChange = text => setKeyword(text);\n  const search = async () => {\n    if (keyword === \"\") {\n      return;\n    }\n    const [movies, movieError] = await movieApi.search(keyword);\n    const [shows, showsError] = await tvApi.search(keyword);\n    setResults({\n      movies,\n      shows,\n      movieError,\n      showsError\n    });\n  };\n\n  return (\n    <SearchPresenter\n      {...results}\n      onChange={onChange}\n      onSubmit={search}\n      keyword={keyword}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}